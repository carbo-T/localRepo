linux:
ls,ll	list
cd change directory
mkdir make directory
touch create a file
rm remove
pwd display current directory
whoami
hostname
ifconfig
netstat
man
kill
clear

vim
up,down,left,right: k,j,h,i
i/esc: insert/escape insert
wq,ZZ: write and quit
r,t: read to and write from file

git:
git init
git add (can add many files and commit once)
git commit -m "message"
git status (if there's something hasn't been uploaded)
git diff (details)
git log (records to support rollback)
git reset -hard HEAD^ (HEAD^ means rollback to the last version, HEAD^^ represent the last second)
git reset id (use six hex number to implement forward or back version control)
git checkout -- filename (add file from repository to workspace)
git rm filename (remove file)
-------------------------------------------------------------------------------
remote control
ssh-kegen -t ras -C "email@example.com"
ssh-agent
ssh-add ***/id_rsa
ssh -T git@github.com (test)
git remote add origin *****url*****
git push -u orgin master
**********************************************
branch control
git checkout -b branchName (create or override a branch)
git checkout branchName (switch to a branch)
git merge branchName (merge branch to current branch)
git branch -d branchName (delete branch)
git branch (check current branch)
**********************************************
store scene
git stash (store)
git stash list (list)
git stash apply/drop (apply or delete the scene)
git stash pop (apply and delete)

***********************************************
deploy shadowsocks and config
apt install shadowsocks
vi /etc/shadowsocks/config.json, edit ip and port(remoteIP:443, localIP:1080)
sslocal/ssserver -c /etc/shadowsocks/config.json -d start/stop/restart

apt install proxychains
config proxychains DNS, IP and Port
proxychains curl myip.ipip.net

convert socks5 to http proxy
apt install privoxy
vi /etc/privoxy/config
  forward-socks5 / 127.0.0.1:1080 .
  listen-address  127.0.0.1:8010
config firefox's proxy
************************************************
create swap for linux, enlarge memory
# check current mem usage
free -h
df -h
# find a place to create the swap file, this cmd create the file called 'swapadd' in /
# if:input place; of:output place; bs:block size; count:file total size (512M)
dd if=/dev/zero of=/swapadd bs=1024 count=524288
# move the file into mnt
mkdir /mnt/swap/
mv swapadd /mnt/swap/
# create system swap and enable/disable it
mkswap /mnt/swap/swapadd
swapon /mnt/swap/swapadd
swapoff -v /mnt/swap/swapadd
# go to check if it works
free -m
***********************************************
file tranfer
# copy files over secure connection 
scp -r -P port localfile.txt username@ip:remoteDir
# safe file transfer with breakpoint resume
rsync -e 'ssh -p port' --delete-before -r --progress localfile.txt username@ip:remoteDir
